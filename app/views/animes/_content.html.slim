- content_title ||= :present
- content_text ||= :present

.b-catalog_entry-tooltip
  .entry-tooltip_container
    - if local_assigns[:with_image]
      a.image-link href=anime.url title=anime.name
        = render 'db_entries/poster',
          db_entry: anime,
          poster: anime.poster,
          derivative: :preview

    .inner
      - if content_title != :none
        .line.name itemprop='name'
          - if Rails.env.development?
            code.b-code_inline style='margin-right: 5px'
              | [#{anime.id}]
          - if !defined?(cover_by) || cover_by != :link
            a.data.name[
              href=anime.url
              title=anime.name
              itemprop='name'
            ] = localization_span anime
          - else
            .linkeable.name[
              data-href=anime.url
              data-title=anime.name
            ] = localization_span anime

      - if content_text != :none && !anime.banned?
        .text itemprop='description'
          = anime.decorate.description_html_truncated

      - if anime.kind.present? || anime.year.present? || (anime.anime? && anime.rating.present? && !anime.rating_none?) || anime.status
        = info_line Anime.human_attribute_name(:kind) do
          - if anime.kind.present?
            .b-tag.linkeable data-href=anime.collection_url(kind: anime.kind)
              = anime.kind_text
          - if anime.year.present?
            .b-tag.linkeable data-href=anime.collection_url(season: anime.year)
              = t '.year', year: anime.year
          - if anime.anime? && anime.rating.present? && !anime.rating_none?
            .b-tag.linkeable data-href=anime.collection_url(rating: anime.rating)
              = anime.rating_text
          - if anime.status
            span.b-anime_status_tag[
              class=anime.status.downcase.gsub(' ', '_')
              data-text=anime.status_text.downcase
            ]

      - if anime.respond_to?(:studios) && anime.real_studios.any?
        = info_line i18n_io('Producer', anime.real_studios.one? ? :one : :few) do
          - anime.real_studios.each do |studio|
            .b-tag.linkeable[
              data-href=anime.collection_url(studio: studio.to_param)
            ] = studio.filtered_name

      - if anime.respond_to?(:publishers) && anime.real_publishers.any?
        = info_line i18n_io('Publisher', anime.real_publishers.one? ? :one : :few) do
          - anime.real_publishers.each do |publisher|
            .b-tag.linkeable[
              data-href=anime.collection_url(publisher: publisher.to_param)
            ] = publisher.name

      - if anime.respond_to?(:episodes) && (anime.episodes > 0 || anime.episodes_aired > 0)
        = render partial: 'animes/aired_chapters', formats: :html,
          locals: { entry: anime,
            field_label: Anime.human_attribute_name(:episodes),
            counter: :episodes,
            counter_aired: :episodes_aired }

      - if anime.respond_to?(:volumes) && anime.volumes > 0
        = render partial: 'animes/aired_chapters', formats: :html,
          locals: { entry: anime,
            field_label: Manga.human_attribute_name(:volumes),
            counter: :volumes,
            counter_aired: :volumes_aired }

      - if anime.respond_to?(:chapters) && anime.chapters > 0
        = render partial: 'animes/aired_chapters', formats: :html,
          locals: { entry: anime,
            field_label: Manga.human_attribute_name(:chapters),
            counter: :chapters,
            counter_aired: :chapters_aired }

      = render 'animes/genres_lines', entry: anime, is_main_genres: true

      - if anime.with_score?
        .rating[
          itemscope
          itemprop='aggregateRating'
          itemtype='http://schema.org/AggregateRating'
        ]
          - if anime.cached_rates_count > 0
            meta itemprop='bestRating' content='10'
            meta itemprop='ratingValue' content=anime.score_2
            meta itemprop='ratingCount' content=anime.cached_rates_count

          span = '%.2f' % anime.score_2
          span.text = Anime.human_attribute_name(:score_2).downcase
      - else
        .data

  div[
    class=('flexible-button' if !local_assigns[:with_image] && !local_assigns[:no_flexible_button])
  ]
    = render partial: 'user_rates/placeholder',
      locals: { target: anime, extended: false }
