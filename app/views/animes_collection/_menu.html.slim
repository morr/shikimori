.b-collection-filters[
  data-base_path="/#{menu.klass.name.downcase.pluralize}"
]
  - if defined? in_user_profile
    = render 'animes_collection/mylist', klass: menu.klass

  .block.hidden
    ul.b-block_list.achievement.anime-params

  .block.hidden
    ul.b-block_list.franchise.anime-params

  .block
    .subheadline.m5 = t 'dashboards.animes.recommended.title'

    .b-list.is-wide
      li: a.b-link[
        href=send(:"recommendations_favourites_#{menu.klass.name.downcase}_url")
      ] = t "dashboards.#{menu.klass.table_name}.recommended.favourite"

      - if menu.anime?
        li: a.b-link[
          href=RecommendationsController::TOPIC_URL
        ] = t 'dashboards.animes.recommended.by_community'

      - unless menu.ranobe?
        li: a.b-link[
          href=recommendations_url(klass: menu.klass.name.downcase)
        ] = t "dashboards.#{menu.klass.table_name}.recommended.personalized"

  - unless view.studio_page? || %w[user_rates userlist_comparer].include?(params[:controller])
    = render 'spnsrs/ad', ad: Ad.new(:menu_240x400)

  .block
    .subheadline.m5 = menu.klass.human_attribute_name :status
    ul.b-block_list.statuses.anime-params
      - menu.statuses.each do |status|
        li[
          data-field='status'
          data-value=status.text
        ]
          input type='checkbox' autocomplete='off'
          = status.catalog_title

  - if menu.kinds.any?
    .block
      .subheadline.m5 = menu.klass.human_attribute_name(:kind)
      ul.b-block_list.kinds.anime-params
        - menu.kinds.each do |kind|
          - next if kind.text.to_sym == ::Types::Manga::Kind[:doujin] && !user_signed_in?
          li[
            data-field='kind'
            data-value=kind.text
          ]
            input type='checkbox' autocomplete='off'
            = kind.title

          - if kind.text == 'tv'
            - %w(13 24 48).each do |episodes_kind|
              li.sub[
                data-field='kind'
                data-value="tv_#{episodes_kind}"
              ]
                input type='checkbox' autocomplete='off'
                  = t ".anime.kind.tv_#{episodes_kind}.name"
                  span.b-question.b-tooltipped.mobile.unprocessed[
                    title=t(".anime.kind.tv_#{episodes_kind}.tooltip")
                    data-direction='top'
                  ]

  - if show_social?
    .addthis_toolbox.addthis_default_style
      a.addthis_button_vk
      a.addthis_button_facebook
      a.addthis_button_twitter
      a.addthis_button_google_plusone_share
      a.addthis_button_mymailru
      a.addthis_button_odnoklassniki_ru
      a.addthis_button_compact

  - if menu.show_sorting?
    .block
      .subheadline.m5 = i18n_i 'Sorting'
      - if view.studio_page?
        = text_spoiler t('.show_list') do
          = render 'animes_collection/sorting', local_assigns: local_assigns
      - else
        = render 'animes_collection/sorting', local_assigns: local_assigns

  - if user_signed_in? && !defined?(in_user_profile)
    .block.anime-params-block.mylist-block
      span.filter.block-filter.item-sign
      .subheadline.m5 = i18n_i('list').capitalize
      - if view.studio_page?
        = text_spoiler t('.show_list') do
          ul.b-block_list.mylist.anime-params
            - UserRate.statuses.each do |name, id|
              li[
                data-field='mylist'
                data-value=name
              ]
                input type='checkbox' autocomplete='off'
                = UserRate.status_name name, menu.klass.name
      - else
        ul.b-block_list.mylist.anime-params
          - UserRate.statuses.each do |name, id|
            li[
              data-field='mylist'
              data-value=name
            ]
              input type='checkbox' autocomplete='off'
              = UserRate.status_name name, menu.klass.name

  .block.hidden
    .subheadline.m5 = i18n_i 'Publisher'
    ul.b-block_list.publishers.anime-params

  .block
    .subheadline.m5 = i18n_i 'Season'
    - if view.studio_page?
      = text_spoiler t('.show_list') do
        ul.b-block_list.seasons.anime-params
          - menu.seasons.each do |season|
            li[
              data-field='season'
              data-value=season.text
            ]
              input type='checkbox' autocomplete='off'
              = season.catalog_title
    - else
      ul.b-block_list.seasons.anime-params
        - menu.seasons.each do |season|
          li[
            data-field='season'
            data-value=season.text
          ]
            input type='checkbox' autocomplete='off'
            = season.catalog_title

  - unless %w[user_rates userlist_comparer].include? params[:controller]
    .block.scores
      .subheadline.m5 = i18n_i 'Score'
      - if view.studio_page?
        = text_spoiler t('.show_list') do
          ul.b-block_list.scores.anime-params
            - [8, 7, 6].each do |score|
              li[
                data-field='score'
                data-value=score
              ]
                input type='checkbox' autocomplete='off'
                | #{score}+
      - else
        ul.b-block_list.scores.anime-params
          - [8, 7, 6].each do |score|
            li[
              data-field='score'
              data-value=score
            ]
              input type='checkbox' autocomplete='off'
              | #{score}+

  - if menu.klass == Anime
    .block.durations
      .subheadline.m5 = i18n_i 'Episode'
      - if view.studio_page?
        = text_spoiler t('.show_list') do
          ul.b-block_list.durations.anime-params
            - Animes::Filters::ByDuration::DRY_TYPE.values.each do |value|
              li[
                data-field='duration'
                data-value=value
              ]
                input type='checkbox' autocomplete='off'
                = t ".anime.duration.#{value}"
      - else
        ul.b-block_list.durations.anime-params
          - Animes::Filters::ByDuration::DRY_TYPE.values.each do |value|
            li[
              data-field='duration'
              data-value=value
            ]
              input type='checkbox' autocomplete='off'
              = t ".anime.duration.#{value}"

    .block.ratings
      .subheadline.m5 = i18n_i 'Rating'
      - if view.studio_page?
        = text_spoiler t('.show_list') do
          = render 'animes_collection/ratings'
      - else
        = render 'animes_collection/ratings'

  .block.genres
    .subheadline.m5 = i18n_i 'Genre', :other
    = text_spoiler t('.show_list') do
      ul.b-block_list.genres.anime-params.m10
        - menu.sorted_genres.each do |genre|
          - next if genre.censored? && !user_signed_in?
          li[
            class=(:m10 if genre.position && genre.position % 10 == 0)
            data-field='genre'
            data-value=genre.to_param
          ]
            input type='checkbox' autocomplete='off'
            = localization_span genre
            - if genre.description.present?
              span.b-question.mobile.bubbled[
                title=genre.description
                data-predelay='150'
                data-href=tooltip_moderations_genre_url(genre)
              ]

  .block.anime-params-block.licensors
    .subheadline.m5 = Anime.human_attribute_name :licensors
    ul.b-block_list.licensors.anime-params.m10
      li.m10[
        data-field='licensor'
        data-value=Animes::Filters::ByLicensor::ANYTHING
      ]
        input type='checkbox' autocomplete='off'
        = t 'yes'
      = text_spoiler t('.show_list') do
        - menu.licensors.each do |group|
          - group.each do |licensor|
              li[
                class=(:m10 if group != menu.licensors.last && licensor == group.last)
                data-field='licensor'
                data-value=licensor
              ]
                input type='checkbox' autocomplete='off'
                = licensor
