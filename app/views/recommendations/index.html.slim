header.head.misc
  h1 = og.headline

  - if @view.klass == Anime
    a.misc href=recommendations_manga_url = Manga.model_name.human.downcase
  - else
    a.misc href=recommendations_anime_url = Anime.model_name.human.downcase

  - if user_signed_in?
    .b-header_filters
      - if @view.klass == Anime
        .filter-line
          span.title = "#{t '.method'}:"

          /a.b-link[
            /class="#{:current if @metric == 'pearson'}"
            /href="#{recommendations_url metric: 'pearson', threshold: @threshold, user: params[:user]}"
          /] pearson

          a.b-link[
            class=(:current if @metric == 'pearson_z')
            href=recommendations_url(metric: 'pearson_z', threshold: @threshold, user: params[:user])
          ] pearson_z

          /a.b-link[
            /class=(:current if @metric == 'pearson_mean')
            /href=recommendations_url(metric: 'pearson_mean', threshold: @threshold, user: params[:user])
          /] pearson_mean

          /a.b-link[
            /class=(:current if @metric == 'euclid')
            /href=recommendations_url(metric: 'euclid', threshold: @threshold, user: params[:user])
          /] euclid

          a.b-link[
            class=(:current if @metric == 'svd')
            href=recommendations_url(metric: 'svd', threshold: @threshold, user: params[:user])
          ] svd

          /a[
            /class="#{:current if @metric == 'svd_full'}"
            /href="#{recommendations_url metric: 'svd_full', threshold: @threshold, user: params[:user]}"
          /] svd_full

        .hint = t '.recommendation_hint'

      .filter-line
        span.title = "#{t '.filtering'}:"

        a.b-link[
          class=(:current if @threshold == RecommendationsController::THRESHOLDS[@view.klass][@metric][0])
          href=recommendations_url(metric: @metric, threshold: RecommendationsController::THRESHOLDS[@view.klass][@metric][0], user: params[:user])
        ] = t '.filtering_type.none'

        a.b-link[
          class=(:current if @threshold == RecommendationsController::THRESHOLDS[@view.klass][@metric][1])
          href=recommendations_url(metric: @metric, threshold: RecommendationsController::THRESHOLDS[@view.klass][@metric][1], user: params[:user])
        ] = t '.filtering_type.soft'

        a.b-link[
          class=(:current if @threshold == RecommendationsController::THRESHOLDS[@view.klass][@metric][2])
          href=recommendations_url(metric: @metric, threshold: RecommendationsController::THRESHOLDS[@view.klass][@metric][2], user: params[:user])
        ] = t '.filtering_type.moderate'

        a.b-link[
          class=(:current if @threshold == RecommendationsController::THRESHOLDS[@view.klass][@metric][3])
          href=recommendations_url(metric: @metric, threshold: RecommendationsController::THRESHOLDS[@view.klass][@metric][3], user: params[:user])
        ] = t '.filtering_type.hard'

        a.b-link[
          class=(:current if @threshold == RecommendationsController::THRESHOLDS[@view.klass][@metric][4])
          href=recommendations_url(metric: @metric, threshold: RecommendationsController::THRESHOLDS[@view.klass][@metric][4], user: params[:user])
        ] = t '.filtering_type.full'

      .hint = t '.filtering_hint'

  .notice
    p
      = t '.about',
        action: (@view.klass == Anime ? i18n_i(:watching, 1, :dative) : i18n_i(:reading, 1, :dative)),
        kind: (@view.klass == Anime ? i18n_i(:anime, 1, :genitive) : i18n_i(:manga, 1, :genitive))
    p
      = t '.how_it_works',
        kind: (@view.klass == Anime ? i18n_i(:anime, 1, :genitive) : i18n_i(:manga, 1, :genitive))

- if @view.collection && @view.collection.empty?
  .no-rankings
    p.fail = t '.cant_generate_recommendations'
    p
      - if @view.klass == Anime
        = t '.anime_recommendations_generation_requirements'
      - else
        = t '.manga_recommendations_generation_requirements'

- elsif !@view.collection
  p.pending = t '.generating_recommendations'
  .ajax-loading.vk-like.left title="#{t 'loading'}"

- else
  = render 'animes_collection/pagination'

  .menu-toggler
    .toggler

  .menu-slide-outer.x199
    .menu-slide-inner
      .l-content
        = render 'animes_collection/cached_collection', view: @view

      .l-menu
        = render 'animes_collection/menu', menu: @menu, view: @view

  = render 'animes_collection/pagination'
