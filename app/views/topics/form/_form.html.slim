- topic_type_policy = Topic::TypePolicy.new topic
- submit_url = topic.persisted? ? topic_url(topic) : topics_url

= simple_form_for topic, url: submit_url, as: :topic do |f|
  input type="hidden" name="rules_passed" value="1"

  - if topic.errors.any?
    .b-errors
      .subheadline = i18n_i 'error', :other
      .block
        == topic.errors.full_messages.join('<br>')

  .subheadline.m10
    = t topic.persisted? ? '.edit.title' : '.new.title'

  = f.input :user_id, as: :hidden
  = f.input :linked_id, as: :hidden
  = f.input :linked_type, as: :hidden

  .inputs.m15
    - if topic.persisted? && can?(:manage, Topic) && !topic_type_policy.any_club_topic?
      = f.input :type, as: :select, include_blank: false,
        collection: [Topic, Topics::NewsTopic].map { |v| [v.model_name.human, v.name] },
        input_html: { disabled: !(topic.new_record? || can?(:manage, Topic)) }
    - else
        = f.input :type, as: :hidden

    - if topic_type_policy.any_club_topic?
        = f.input :forum_id, as: :hidden
    - else
      = f.input :forum_id, as: :select, include_blank: false,
        collection: Forum.public,
        input_html: { disabled: !(topic.new_record? || can?(:manage, Topic)) }

    = f.input :title

    - if topic_type_policy.any_club_topic?
      = f.input :linked_id, as: :hidden
      = f.input :linked_type, as: :hidden

    - else
      .topic_linked
        .b-input.string.optional
          label.string.optional.control-label for="topic_linked"
            = t 'activerecord.attributes.topic.linked'
          input.string.optional#topic_linked[
            type="text"
            data-anime-placeholder=t('anime_title')
            data-manga-placeholder=t('manga_title')
            data-ranobe-placeholder=t('ranobe_title')
            data-character-placeholder=t('character_name')
            data-person-placeholder=t('person_name')
            data-anime-autocomplete=autocomplete_animes_url
            data-manga-autocomplete=autocomplete_mangas_url
            data-ranobe-autocomplete=autocomplete_ranobe_index_url
            data-character-autocomplete=autocomplete_characters_url
            data-person-autocomplete=autocomplete_people_url
            style=('display: none;' if topic.linked.present?)
          ]
          select.type[
            style=('display: none;' if topic.linked.present?)
          ]
            option value=Anime.name = Anime.model_name.human
            option value=Manga.name = Manga.model_name.human
            option value=Ranobe.name = Ranobe.model_name.human
            option value=Character.name = Character.model_name.human
            option value=Person.name = Person.model_name.human

        .topic-link[
          style=('display: none;' unless topic.linked.present?)
        ]
          - if topic.linked.present?
            a.bubbled.b-link[
              href=url_for(topic.linked)
              title=topic.linked.name
            ]
              = topic.linked.name
          .b-js-action.remove = t('actions.delete').downcase

    - if topic_type_policy.news_topic?
      = render 'topics/form/news_form',
        topic: topic,
        f: f,
        decomposed_body: Topics::DecomposeBody.new(topic)

    - if current_user.admin? && !topic_type_policy.any_club_topic?
      = f.input :broadcast

    .b-shiki_editor.unprocessed.block
      .field-name = t ".#{topic_type_policy.news_topic? ? :news : :topic}_text"
      = render 'comments/shiki_editor',
        text: (topic.body || '').sub(/\[wall\][\s\S]*/, '').strip,
        field_name: 'topic[body]'

  .buttons
    a.cancel href=back_url = t 'actions.cancel'
    = f.button :magic_submit
